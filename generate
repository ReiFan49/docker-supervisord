#!/bin/bash

# [[ ! -f ver.json ]] && curl -q -o ver.json 'https://api.github.com/repos/ochinchina/supervisord/tags?per_page=100'
# VERSIONS_ONLINE=$(cat ver.json)
GITHUB_REPOSITORY=
DOCKER_IMAGE=
DOCKER_IMAGE_AUTHOR=
DOCKER_IMAGE_DESCRIPTION=

[[ -z ${GITHUB_REPOSITORY} ]] && exit 1
[[ -z ${DOCKER_IMAGE} ]] && exit 1

# Version from main repository
VERSIONS_ONLINE=$(curl -s "https://api.github.com/repos/${GITHUB_REPOSITORY}/tags?per_page=100")
# Version with go.mod
# Use comparison operators to select versions.
VERSIONS_WITH_MODULES=$(echo "${VERSIONS_ONLINE}" | jq '
    map(.name) |
    map(select(
      1 == 1
    )) |
    map(.[1:]) | .[]' |
  sort -V |
  sed -E 's|"||g; s|^v||g'
)
# Version with no error on compilation
# Use grep to select versions.
VERSIONS_CAN_BUILD="${VERSIONS_WITH_MODULES}"
# Version already built locally
VERSIONS_ALREADY_BUILT=$(docker image ls --format='{{.Tag}}' "${DOCKER_IMAGE}" | sort -V)

VERSIONS_AVAILABLE="${VERSIONS_CAN_BUILD}"
BUILT_COUNT=

for image_ver in ${VERSIONS_AVAILABLE}; do
  (echo "${VERSIONS_ALREADY_BUILT}" | grep -qF "${image_ver}") && continue

  docker build -t "${DOCKER_IMAGE}:${image_ver}" \
    --build-arg "BRANCH=v${image_ver}" \
    --label org.opencontainers.image.authors="${DOCKER_IMAGE_AUTHOR}" \
    # --label org.opencontainers.image.description='${DOCKER_IMAGE_DESCRIPTION}' \
    .
  [[ $? -ne 0 ]] || continue

  BUILT_COUNT="${BUILT_COUNT}1"
done

[[ -n "${BUILT_COUNT}" ]] && docker push -a "${DOCKER_IMAGE}"

# Perform cleanup
docker builder prune -f
docker image prune -f
